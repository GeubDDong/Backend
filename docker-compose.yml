services:
  backend-app:
    image: kinyura/geubddong
    container_name: backend-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    restart: always
    networks:
      - app_network

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis:6379
    restart: always
    networks:
      - app_network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    ports:
      - '9187:9187'
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_EXPORTER_DATA_SOURCE_NAME}
    restart: always
    networks:
      - app_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    restart: always
    networks:
      - app_network

  scrape_configs:
    - job_name: 'backend-app-prod'
      scheme: https
      metrics_path: /metrics
      static_configs:
        - targets: ['geubddong.com:443']

networks:
  app_network:
    driver: bridge
